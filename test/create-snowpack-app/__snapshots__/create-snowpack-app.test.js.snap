// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`create-snowpack-app app-template-svelte-typescript > build: allFiles 1`] = `
Array [
  "build-manifest.json",
  "dist/index.css",
  "dist/index.js",
  "favicon.ico",
  "index.html",
  "logo.svg",
  "robots.txt",
]
`;

exports[`create-snowpack-app app-template-svelte-typescript > build: build-manifest.json 1`] = `
"{
  \\"inputs\\": {
    \\"_snowpack/env.js\\": {
      \\"bytes\\": 97,
      \\"imports\\": []
    },
    \\"dist/App.svelte.css\\": {
      \\"bytes\\": 763,
      \\"imports\\": []
    },
    \\"_snowpack/pkg/common/index-XXXXXXXX.js\\": {
      \\"bytes\\": 7890,
      \\"imports\\": []
    },
    \\"_snowpack/pkg/svelte/internal.js\\": {
      \\"bytes\\": 213,
      \\"imports\\": [
        {
          \\"path\\": \\"_snowpack/pkg/common/index-XXXXXXXX.js\\"
        }
      ]
    },
    \\"_snowpack/pkg/svelte.js\\": {
      \\"bytes\\": 59,
      \\"imports\\": [
        {
          \\"path\\": \\"_snowpack/pkg/common/index-XXXXXXXX.js\\"
        }
      ]
    },
    \\"dist/App.svelte.js\\": {
      \\"bytes\\": 2394,
      \\"imports\\": [
        {
          \\"path\\": \\"dist/App.svelte.css\\"
        },
        {
          \\"path\\": \\"_snowpack/pkg/svelte/internal.js\\"
        },
        {
          \\"path\\": \\"_snowpack/pkg/svelte.js\\"
        }
      ]
    },
    \\"dist/index.js\\": {
      \\"bytes\\": 394,
      \\"imports\\": [
        {
          \\"path\\": \\"_snowpack/env.js\\"
        },
        {
          \\"path\\": \\"dist/App.svelte.js\\"
        }
      ]
    }
  },
  \\"outputs\\": {
    \\"../~~bundle~~/dist/index.js\\": {
      \\"imports\\": [],
      \\"exports\\": [
        \\"default\\"
      ],
      \\"inputs\\": {
        \\"_snowpack/env.js\\": {
          \\"bytesInOutput\\": 186
        },
        \\"dist/App.svelte.css\\": {
          \\"bytesInOutput\\": 0
        },
        \\"_snowpack/pkg/common/index-XXXXXXXX.js\\": {
          \\"bytesInOutput\\": 6140
        },
        \\"_snowpack/pkg/svelte/internal.js\\": {
          \\"bytesInOutput\\": 0
        },
        \\"_snowpack/pkg/svelte.js\\": {
          \\"bytesInOutput\\": 0
        },
        \\"dist/App.svelte.js\\": {
          \\"bytesInOutput\\": 2267
        },
        \\"dist/index.js\\": {
          \\"bytesInOutput\\": 208
        }
      },
      \\"bytes\\": 9216
    },
    \\"../~~bundle~~/dist/index.css\\": {
      \\"imports\\": [],
      \\"inputs\\": {
        \\"dist/App.svelte.css\\": {
          \\"bytesInOutput\\": 902
        }
      },
      \\"bytes\\": 928
    }
  }
}"
`;

exports[`create-snowpack-app app-template-svelte-typescript > build: dist/index.css 1`] = `
"/* dist/App.svelte.css */
body {
  margin: 0;
  font-family: Arial, Helvetica, sans-serif;
}
.App.svelte-1sqyd3v.svelte-1sqyd3v {
  text-align: center;
}
.App.svelte-1sqyd3v code.svelte-1sqyd3v {
  background: #0002;
  padding: 4px 8px;
  border-radius: 4px;
}
.App.svelte-1sqyd3v p.svelte-1sqyd3v {
  margin: 0.4rem;
}
.App-header.svelte-1sqyd3v.svelte-1sqyd3v {
  background-color: #f9f6f6;
  color: #333;
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  font-size: calc(10px + 2vmin);
}
.App-link.svelte-1sqyd3v.svelte-1sqyd3v {
  color: #ff3e00;
}
.App-logo.svelte-1sqyd3v.svelte-1sqyd3v {
  height: 36vmin;
  pointer-events: none;
  margin-bottom: 3rem;
  animation: svelte-1sqyd3v-App-logo-spin infinite 1.6s ease-in-out alternate;
}
@keyframes svelte-1sqyd3v-App-logo-spin {
  from {
    transform: scale(1);
  }
  to {
    transform: scale(1.06);
  }
}"
`;

exports[`create-snowpack-app app-template-svelte-typescript > build: dist/index.js 1`] = `
"var __defProp = Object.defineProperty;
var __markAsModule = (target) => __defProp(target, \\"__esModule\\", {value: true});
var __export = (target, all) => {
  __markAsModule(target);
  for (var name in all)
    __defProp(target, name, {get: all[name], enumerable: true});
};
// _snowpack/env.js
var env_exports = {};
__export(env_exports, {
  MODE: () => MODE,
  NODE_ENV: () => NODE_ENV,
  SSR: () => SSR
});
var MODE = \\"production\\";
var NODE_ENV = \\"production\\";
var SSR = false;
// _snowpack/pkg/common/index-XXXXXXXX.js
function noop() {
}
function run(fn) {
  return fn();
}
function blank_object() {
  return Object.create(null);
}
function run_all(fns) {
  fns.forEach(run);
}
function is_function(thing) {
  return typeof thing === \\"function\\";
}
function safe_not_equal(a, b) {
  return a != a ? b == b : a !== b || (a && typeof a === \\"object\\" || typeof a === \\"function\\");
}
function is_empty(obj) {
  return Object.keys(obj).length === 0;
}
function append(target, node) {
  target.appendChild(node);
}
function insert(target, node, anchor) {
  target.insertBefore(node, anchor || null);
}
function detach(node) {
  node.parentNode.removeChild(node);
}
function element(name) {
  return document.createElement(name);
}
function text(data) {
  return document.createTextNode(data);
}
function space() {
  return text(\\" \\");
}
function attr(node, attribute, value) {
  if (value == null)
    node.removeAttribute(attribute);
  else if (node.getAttribute(attribute) !== value)
    node.setAttribute(attribute, value);
}
function children(element2) {
  return Array.from(element2.childNodes);
}
function set_data(text2, data) {
  data = \\"\\" + data;
  if (text2.wholeText !== data)
    text2.data = data;
}
var current_component;
function set_current_component(component) {
  current_component = component;
}
function get_current_component() {
  if (!current_component)
    throw new Error(\\"Function called outside component initialization\\");
  return current_component;
}
function onMount(fn) {
  get_current_component().$$.on_mount.push(fn);
}
var dirty_components = [];
var binding_callbacks = [];
var render_callbacks = [];
var flush_callbacks = [];
var resolved_promise = Promise.resolve();
var update_scheduled = false;
function schedule_update() {
  if (!update_scheduled) {
    update_scheduled = true;
    resolved_promise.then(flush);
  }
}
function add_render_callback(fn) {
  render_callbacks.push(fn);
}
var flushing = false;
var seen_callbacks = new Set();
function flush() {
  if (flushing)
    return;
  flushing = true;
  do {
    for (let i = 0; i < dirty_components.length; i += 1) {
      const component = dirty_components[i];
      set_current_component(component);
      update(component.$$);
    }
    set_current_component(null);
    dirty_components.length = 0;
    while (binding_callbacks.length)
      binding_callbacks.pop()();
    for (let i = 0; i < render_callbacks.length; i += 1) {
      const callback = render_callbacks[i];
      if (!seen_callbacks.has(callback)) {
        seen_callbacks.add(callback);
        callback();
      }
    }
    render_callbacks.length = 0;
  } while (dirty_components.length);
  while (flush_callbacks.length) {
    flush_callbacks.pop()();
  }
  update_scheduled = false;
  flushing = false;
  seen_callbacks.clear();
}
function update($$) {
  if ($$.fragment !== null) {
    $$.update();
    run_all($$.before_update);
    const dirty = $$.dirty;
    $$.dirty = [-1];
    $$.fragment && $$.fragment.p($$.ctx, dirty);
    $$.after_update.forEach(add_render_callback);
  }
}
var outroing = new Set();
function transition_in(block, local) {
  if (block && block.i) {
    outroing.delete(block);
    block.i(local);
  }
}
function mount_component(component, target, anchor) {
  const {fragment, on_mount, on_destroy, after_update} = component.$$;
  fragment && fragment.m(target, anchor);
  add_render_callback(() => {
    const new_on_destroy = on_mount.map(run).filter(is_function);
    if (on_destroy) {
      on_destroy.push(...new_on_destroy);
    } else {
      run_all(new_on_destroy);
    }
    component.$$.on_mount = [];
  });
  after_update.forEach(add_render_callback);
}
function destroy_component(component, detaching) {
  const $$ = component.$$;
  if ($$.fragment !== null) {
    run_all($$.on_destroy);
    $$.fragment && $$.fragment.d(detaching);
    $$.on_destroy = $$.fragment = null;
    $$.ctx = [];
  }
}
function make_dirty(component, i) {
  if (component.$$.dirty[0] === -1) {
    dirty_components.push(component);
    schedule_update();
    component.$$.dirty.fill(0);
  }
  component.$$.dirty[i / 31 | 0] |= 1 << i % 31;
}
function init(component, options, instance2, create_fragment2, not_equal, props, dirty = [-1]) {
  const parent_component = current_component;
  set_current_component(component);
  const prop_values = options.props || {};
  const $$ = component.$$ = {
    fragment: null,
    ctx: null,
    props,
    update: noop,
    not_equal,
    bound: blank_object(),
    on_mount: [],
    on_destroy: [],
    before_update: [],
    after_update: [],
    context: new Map(parent_component ? parent_component.$$.context : []),
    callbacks: blank_object(),
    dirty,
    skip_bound: false
  };
  let ready = false;
  $$.ctx = instance2 ? instance2(component, prop_values, (i, ret, ...rest) => {
    const value = rest.length ? rest[0] : ret;
    if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {
      if (!$$.skip_bound && $$.bound[i])
        $$.bound[i](value);
      if (ready)
        make_dirty(component, i);
    }
    return ret;
  }) : [];
  $$.update();
  ready = true;
  run_all($$.before_update);
  $$.fragment = create_fragment2 ? create_fragment2($$.ctx) : false;
  if (options.target) {
    if (options.hydrate) {
      const nodes = children(options.target);
      $$.fragment && $$.fragment.l(nodes);
      nodes.forEach(detach);
    } else {
      $$.fragment && $$.fragment.c();
    }
    if (options.intro)
      transition_in(component.$$.fragment);
    mount_component(component, options.target, options.anchor);
    flush();
  }
  set_current_component(parent_component);
}
var SvelteComponent = class {
  $destroy() {
    destroy_component(this, 1);
    this.$destroy = noop;
  }
  $on(type, callback) {
    const callbacks = this.$$.callbacks[type] || (this.$$.callbacks[type] = []);
    callbacks.push(callback);
    return () => {
      const index = callbacks.indexOf(callback);
      if (index !== -1)
        callbacks.splice(index, 1);
    };
  }
  $set($$props) {
    if (this.$$set && !is_empty($$props)) {
      this.$$.skip_bound = true;
      this.$$set($$props);
      this.$$.skip_bound = false;
    }
  }
};
// dist/App.svelte.js
function create_fragment(ctx) {
  let div;
  let header;
  let img;
  let img_src_value;
  let t0;
  let p0;
  let t4;
  let p1;
  let t5;
  let code1;
  let t6;
  let t7;
  let t8;
  let p2;
  return {
    c() {
      div = element(\\"div\\");
      header = element(\\"header\\");
      img = element(\\"img\\");
      t0 = space();
      p0 = element(\\"p\\");
      p0.innerHTML = \`Edit <code class=\\"svelte-1sqyd3v\\">src/App.svelte</code> and save to reload.\`;
      t4 = space();
      p1 = element(\\"p\\");
      t5 = text(\\"Page has been open for \\");
      code1 = element(\\"code\\");
      t6 = text(ctx[0]);
      t7 = text(\\" seconds.\\");
      t8 = space();
      p2 = element(\\"p\\");
      p2.innerHTML = \`<a class=\\"App-link svelte-1sqyd3v\\" href=\\"https://svelte.dev\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Learn Svelte</a>\`;
      if (img.src !== (img_src_value = \\"/logo.svg\\"))
        attr(img, \\"src\\", img_src_value);
      attr(img, \\"class\\", \\"App-logo svelte-1sqyd3v\\");
      attr(img, \\"alt\\", \\"logo\\");
      attr(p0, \\"class\\", \\"svelte-1sqyd3v\\");
      attr(code1, \\"class\\", \\"svelte-1sqyd3v\\");
      attr(p1, \\"class\\", \\"svelte-1sqyd3v\\");
      attr(p2, \\"class\\", \\"svelte-1sqyd3v\\");
      attr(header, \\"class\\", \\"App-header svelte-1sqyd3v\\");
      attr(div, \\"class\\", \\"App svelte-1sqyd3v\\");
    },
    m(target, anchor) {
      insert(target, div, anchor);
      append(div, header);
      append(header, img);
      append(header, t0);
      append(header, p0);
      append(header, t4);
      append(header, p1);
      append(p1, t5);
      append(p1, code1);
      append(code1, t6);
      append(p1, t7);
      append(header, t8);
      append(header, p2);
    },
    p(ctx2, [dirty]) {
      if (dirty & 1)
        set_data(t6, ctx2[0]);
    },
    i: noop,
    o: noop,
    d(detaching) {
      if (detaching)
        detach(div);
    }
  };
}
function instance($$self, $$props, $$invalidate) {
  let count = 0;
  onMount(() => {
    const interval = setInterval(() => $$invalidate(0, count++, count), 1e3);
    return () => {
      clearInterval(interval);
    };
  });
  return [count];
}
var App = class extends SvelteComponent {
  constructor(options) {
    super();
    init(this, options, instance, create_fragment, safe_not_equal, {});
  }
};
var App_svelte_default = App;
// dist/index.js
import.meta.env = env_exports;
var app = new App_svelte_default({
  target: document.body
});
var dist_default = app;
if (void 0) {
  (void 0).accept();
  (void 0).dispose(() => {
    app.$destroy();
  });
}
export {
  dist_default as default
};"
`;

exports[`create-snowpack-app app-template-svelte-typescript > build: index.html 1`] = `
"<!DOCTYPE html><html lang=\\"en\\"><head>
    <meta charset=\\"utf-8\\">
    <link rel=\\"icon\\" href=\\"/favicon.ico\\">
    <meta name=\\"viewport\\" content=\\"width=device-width, initial-scale=1\\">
    <meta name=\\"description\\" content=\\"Web site created using create-snowpack-app\\">
    <title>Snowpack App</title>
  <link rel=\\"stylesheet\\" href=\\"/dist/index.css\\"></head>
  <body>
    <noscript>You need to enable JavaScript to run this app.</noscript>
    <script type=\\"module\\" src=\\"/dist/index.js\\"></script>
    <!--
      This HTML file is a template.
      If you open it directly in the browser, you will see an empty page.
      You can add webfonts, meta tags, or analytics to this file.
      The build step will place the bundled scripts into the <body> tag.
      To begin the development, run \`npm start\` or \`yarn start\`.
      To create a production bundle, use \`npm run build\` or \`yarn build\`.
    -->
</body></html>"
`;
